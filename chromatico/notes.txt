A reference sheet for the developer (Me)

What the whole program does currently:
1. User signup functions with authentication
2. When the user signs up they are added to the database and initialized with 2 models- the user with their info and the user's statistics.
3. The signup quiz uses a database model to generate the itinerary of a quiz and then the user is redirected to the start page. The current
authentication for this is to enter their username, but it is not checked by the user-in-session's username, but that of what the user enters. This is
problematic. The signup quiz question generation works pretty well, however it doesn't update the question every time they are redirected to the page.
3. User login/logout functions, each time setting a secure "user id" cookie in session.
5. A homepage different for a logged in user and a logged out user.
6. A resources page with references to what was used in the making of Chromatico.

Read about submitting to CSV file for Python

What the program will do:
1. The logged in user has access to their profile which has options, progress and comment functions. (Like a diary of sorts.)
2. Once the current quiz in the database's total questions has been answered, the user will be redirected to their profile, and the results of the quiz will be pushed
to the progress section of the profile. Then, the user may begin training through quizzes, using the same algorithm as before.
3. Once a level one user reaches 200 points, they may attempt the final exam for level 1.
4. If they pass with a percentage_correct > 87.0 the user levels up.
5. When they pass, they are taken to a games page with an implementation of a fun lil html game. (This is just an added feature, can't guarantee it happening.)
6. When the user reaches 300 points, the page for user quizzes opens up and now they can play other's quizzes.
7. This process continues until they reach level 4, then the page with user quiz creation opens up.
8. Use a module to allow the user to create a quiz on their own.

See changeLog.txt for exact dates/times when something was changed
